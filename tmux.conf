# The goal of the tmux configuration is to make it behave very much like screen + vim

## Status line
set -g status-bg black
set -g status-fg white

set-window-option -g window-status-current-attr bold
set-window-option -g window-status-current-fg red
set-window-option -g monitor-activity on
set-window-option -g mode-keys vi
set-window-option -g clock-mode-style 24
set-window-option -g utf8 on

## Keys
# use the same prefix as in screen
set -g prefix C-a

unbind-key c
bind-key c new-window
bind-key C-c new-window

#unbind-key &
#bind-key k confirm-before kill-window
#bind-key C-k confirm-before kill-window

bind-key C-[ copy-mode

unbind-key l
bind-key C-a last-window

unbind-key C-b
bind-key a send-prefix

unbind-key n
bind-key n next-window
bind-key C-n next-window

unbind-key p
bind-key p previous-window
bind-key C-p previous-window

unbind-key d
bind-key d detach
bind-key C-d detach

# Vim behavior for moving, splitting and resizing windows
bind-key v split-window -h
bind-key C-v split-window -h

bind-key s split-window -v
bind-key C-s split-window -v

bind-key < resize-pane -L
bind-key > resize-pane -D
bind-key + resize-pane -U
bind-key - resize-pane -R

bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

unbind-key '"'
bind-key '"' choose-window

## Other stuff
# reduce escape key timeout
set-option escape-time 0

# fast way to open a manpage in a new window
bind-key / command-prompt "split-window 'exec man %%'"

##CLIPBOARD selection integration
###Requires prefix key before the command key
##Copy tmux paste buffer to CLIPBOARD
bind-key y run "tmux show-buffer | xclip -i -selection clipboard"
#Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
# bind-key p run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"
