# The goal of the tmux configuration is to make it behave very much like screen + vim
# Plug-ins {{{1
set -g @plugin 'tmux-plugins/tpm'
set -g @update_key 'C-u'

# tmux-sensible {{{2
set -g @plugin 'tmux-plugins/tmux-sensible'
# override prefix definition in tmux-sensible
set -g prefix C-Space
set-option -g display-time 500

# switch to last window, use C-Space + C-Space instead of C-Space + Space
unbind-key l
bind-key C-Space last-window

# send the C-a prefix to the running application
bind-key Space send-prefix

# tmux-yank {{{2
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_line L

# Clipboard integration requires the xclip or xsel utility!
# This configuration extends tmux-yank plug-in
# Copy tmux paste buffer to CLIPBOARD
# bind-key y run "tmux save-buffer - | perl -pe 'chomp if eof' | xclip -i" \; display-message "Yanked buffer!"
bind-key y run "tmux save-buffer - | perl -pe 'chomp if eof' | xsel -i" \; display-message "Yanked buffer!"
bind-key C-y run "tmux save-buffer - | perl -pe 'chomp if eof' | xsel -i" \; display-message "Yanked buffer!"

# copy current directory to clipboard
bind-key Y run "tmux set-buffer -- '#{pane_current_path}'; tmux display-message -p '#{pane_current_path}' | perl -pe 'chomp if eof' | xsel -i" \; display-message "Yanked directory!"
bind-key C-Y run "tmux set-buffer -- '#{pane_current_path}'; tmux display-message -p '#{pane_current_path}' | perl -pe 'chomp if eof' | xsel -i" \; display-message "Yanked directory!"

# Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
# bind-key P run "tmux set-buffer -- \"$(xclip -o)\"; tmux paste-buffer"
bind-key P run "tmux set-buffer -- \"$(xsel -o)\"; tmux paste-buffer"
bind-key C-P run "tmux set-buffer -- \"$(xsel -o)\"; tmux paste-buffer"

# initialize plug-ins  {{{2
run '~/.tmux/plugins/tpm/tpm'

# set default terminal to tmux
# set -g default-terminal "tmux"

# Base configuration {{{1
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# These characters don't belong to a word
set-option -g word-separators " |│┤├┬┴\"`'„“«»&()[]{}*,;<>=?@^#\042\047:"

# default key bindings
set-window-option -g mode-keys vi

# start counting windows and panes at one
set -g base-index 0
set -g pane-base-index 0
set -g renumber-windows on

# Status line configuration {{{1
set-option -g status-bg "#d6d6d6"
set-option -g status-fg "#4d4d4c"
# display current path in status bar
set-option -g status-right "@#h %H:%M %a %e %b %Y "
# set-option -g status-right "#{pane_current_path} #h %a %b %e %Y %H:%M "
# set-option -g status-right-length 200
set-option -g status-justify left

# Visual configuration {{{1
set-window-option -g mode-bg "#00875f"
set-window-option -g mode-fg "#ffffff"

set-window-option -g window-status-bg "#d6d6d6"

set-window-option -g window-status-current-attr bold
set-window-option -g window-status-current-fg "#00875f"
set-window-option -g window-status-current-bg "#d6d6d6"

set-window-option -g pane-active-border-fg "#00875f"
set-window-option -g pane-active-border-bg "#eeeeee"

set-window-option -g message-attr bold
set-window-option -g message-bg "#00875f"
set-window-option -g message-fg "#ffffff"
set-window-option -g message-command-bg "#00875f"
set-window-option -g message-command-fg "#ffffff"

set-window-option -g monitor-activity on
set-window-option -g visual-activity on
set-window-option -g window-status-activity-bg default
set-window-option -g window-status-activity-fg red
set-window-option -g window-status-activity-attr default
set-window-option -g window-status-activity-fg "#00875f"
set-window-option -g window-status-activity-bg "#d6d6d6"

set-window-option -g clock-mode-style 24
set-window-option -g window-status-separator " │ "

# Key bindings {{{1

# create a new window
bind-key c new-window -c '#{pane_current_path}'
bind-key C-c new-window -c '#{pane_current_path}'

# create a new session
bind-key N command-prompt "new-session -c '#{pane_current_path}' -s '%%'"

# start copy mode
bind-key C-[ copy-mode

# cycling through the window list
bind-key n next-window
# bind-key C-n next-window  # this is set in tmux-sensible

bind-key p previous-window
# bind-key C-p previous-window  # this is set in tmux-sensible

# detach current session
bind-key d detach
bind-key C-d detach

# duplicated session, this time with only 7 bit input
# this is very helpful when it comes to remote ssh sessions that don't handle 8
# bit input too well
bind-key D run -b "tmux-swap-8bit-input #{session_name}"

# make it easy to move panes between panes and windows
bind-key M command-prompt "move-pane -t '%%'"
bind-key m command-prompt "swap-pane -t '%%'"

# make it easy to move and swap windows
bind-key W command-prompt "move-window -t '%%'"
bind-key w command-prompt "swap-window -t '%%'"

# synchronize panes
bind-key Z set-window-option synchronize-panes

# choose session
bind-key ` choose-session

# move windows
bind-key L swap-window -t :+
bind-key H swap-window -t :-

# swap with master window
bind-key Enter swap-pane -s 0

# move panes
bind-key J swap-pane -t :.+ \; select-pane -t :.+
bind-key K swap-pane -t :.- \; select-pane -t :.-

# Vim behavior for moving, splitting and resizing windows
bind-key v split-window -h -c '#{pane_current_path}'
bind-key C-v split-window -h -c '#{pane_current_path}'
bind-key V split-window -h -p 25 -c '#{pane_current_path}'

bind-key s split-window -v -c '#{pane_current_path}'
bind-key C-s split-window -v -c '#{pane_current_path}'
bind-key S split-window -v -p 25 -c '#{pane_current_path}'

bind-key -r < resize-pane -L
bind-key -r > resize-pane -R
bind-key -r - resize-pane -D
bind-key -r + resize-pane -U
bind-key -r z resize-pane -Z

bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# select window from the list of windows
bind-key '"' choose-window

# fast way to open a manpage in a new window
# bind-key / command-prompt "split-window -c '#{pane_current_path}' -h 'exec man %%'"

# reload configuration, tmux-sensible C-Space + R

# File explorer {{{2
bind-key e split-window -b -c '#{pane_current_path}' -l 45 -h 'EDITOR=$HOME/bin/vserver exec ranger'
bind-key C-e split-window -b -c '#{pane_current_path}' -l 45 -h 'EDITOR=$HOME/bin/vserver exec ranger'
bind-key E split-window -c '#{pane_current_path}' -p 30 -v 'EDITOR=$HOME/bin/vserver exec ranger'
bind-key C-E split-window -c '#{pane_current_path}' -p 30 -v 'EDITOR=$HOME/bin/vserver exec ranger'

# vi: ft=tmux:tw=80:sw=4:ts=4:sts=4:et:fdm=marker
