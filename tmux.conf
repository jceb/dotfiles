# The goal of the tmux configuration is to make it behave very much like screen + vim

## Status line
set-option -g status-bg default
set-option -g status-fg black
set-option -g status-right "#h %a %b %e %Y %H:%M "
set-option -g status-justify left

set-window-option -g mode-bg black
set-window-option -g mode-fg white
set-window-option -g mode-keys vi

set-window-option -g window-status-current-attr bold
set-window-option -g window-status-current-fg red

set-window-option -g pane-active-border-fg brightred
set-window-option -g pane-active-border-bg default

set-window-option -g message-fg brightred
set-window-option -g message-bg default
set-window-option -g message-attr bold

set-window-option -g monitor-activity on
set-window-option -g visual-activity on

set-window-option -g clock-mode-style 24
set-window-option -g utf8 on

# reduce escape key timeout
set-option -s escape-time 0

# start counting windows and panes at one
set -g base-index 0
set -g pane-base-index 0

# enable mouse support
set-window-option -g mode-mouse off
set-window-option -g mouse-select-pane off
set-window-option -g mouse-resize-pane off
set-window-option -g mouse-select-window off

## Keys
# use the same prefix as in screen
set -g prefix C-a
# set -g prefix C-b

# create a new window
unbind-key c
bind-key c new-window
bind-key C-c new-window

# create a new session
bind-key S command-prompt "new-session -s '%%'"

# start copy mode
bind-key C-[ copy-mode

# switch to last window
unbind-key l
bind-key C-a last-window

# send the C-a prefix to the running application
bind-key a send-prefix

# cycling through the window list
unbind-key n
bind-key n next-window
bind-key C-n next-window

unbind-key p
bind-key p previous-window
bind-key C-p previous-window

# detach current session
unbind-key d
bind-key d detach
bind-key C-d detach

# make it easy to move panes between panes and windows
bind-key M command-prompt "move-pane -t '%%'"
bind-key m command-prompt "swap-pane -t '%%'"

# make it easy to move and swap windows
unbind-key w
bind-key W command-prompt "move-window -t '%%'"
bind-key w command-prompt "swap-window -t '%%'"

# synchronize panes
bind-key z set-window-option synchronize-panes

# choose session
bind-key ` choose-session

# swap with master window
bind-key Enter swap-pane -s 0

# Vim behavior for moving, splitting and resizing windows
bind-key v split-window -h
bind-key C-v split-window -h

bind-key s split-window -v
bind-key C-s split-window -v

bind-key -r < resize-pane -L
bind-key -r > resize-pane -R
bind-key -r - resize-pane -D
bind-key -r + resize-pane -U

bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# select window from the list of windows
unbind-key '"'
bind-key '"' choose-window

# fast way to open a manpage in a new window
bind-key / command-prompt "split-window -h 'exec man %%'"

# Clipboard integration requires the xclip utility!
# Copy tmux paste buffer to CLIPBOARD
bind-key y run "tmux save-buffer - | xclip -i -selection primary -" \; display-message "Yanked buffer!"
# Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind-key P run "tmux set-buffer \"$(xclip -o -selection primary)\"; tmux paste-buffer"

bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded!"
