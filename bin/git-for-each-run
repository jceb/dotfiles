#!/bin/bash
set -euo pipefail

JOBS="${JOBS:-16}"     # set this to the number of parallel jobs, only works if xargs or parallel are installed - attention, output of the commands will be interlaced / mixed for xargs
VERBOSE="${VERBOSE:-}" # set this to 1
V=
if [ "${VERBOSE}" = "1" ]; then
    V="-t"
fi

SCRIPT="$(mktemp)"

cat >"${SCRIPT}" <<EOF
#!/bin/bash
set -euo pipefail
${@}
EOF

chmod a+x "${SCRIPT}"

if type parallel &>/dev/null; then
    find . -type d -name .git -printf '%h\n' | parallel "-j${JOBS}" ${V} -k sh -eo pipefail -c "echo && cd {} && echo {} && ${SCRIPT}"
elif type xargs &>/dev/null; then
    find . -type d -name .git -printf '%h\n' | xargs -I {} ${V} "-P${JOBS}" sh -eo pipefail -c "echo && cd {} && echo {} && ${SCRIPT}"
else
    find . -type d -name .git -printf '%h\n' | while read d; do
        (
            [ "${VERBOSE}" = "1" ] && set -x || true
            cd "${d}"
            echo "${d}"
            "${SCRIPT}"
        )
    done
fi
rm -f "${SCRIPT}"
