#!/usr/bin/env sh
#
# This hook will attempt to setup your environment before running checks.

if which rvm > /dev/null 2>&1
then cmd="rvm default do ruby"
elif which rbenv > /dev/null 2>&1
then cmd="rbenv exec ruby"
else cmd="ruby"
fi

export COMMIT_MESSAGE_PATH=$1
if [ -z "$COMMIT_MESSAGE_PATH" ]; then
  >&2 echo "fit-commit: WARNING: Skipping checks because the Git hook was not passed the"
  >&2 echo "fit-commit: commit message file path. This is usually \`.git/COMMIT_EDITMSG\`."
  >&2 echo "fit-commit: This hook was called via: $0 $*"
  >&2 echo "fit-commit: Please submit a bug report with the project:"
  >&2 echo "fit-commit: https://github.com/m1foley/fit-commit/issues"
  exit 0
fi
if [ ! -r "$COMMIT_MESSAGE_PATH" ]; then
  >&2 echo "fit-commit: WARNING: Skipping checks because the commit message file cannot be read:"
  >&2 echo "fit-commit: $COMMIT_MESSAGE_PATH"
  >&2 echo "fit-commit: This hook was called via: $0 $*"
  >&2 echo "fit-commit: Please submit a bug report with the project:"
  >&2 echo "fit-commit: https://github.com/m1foley/fit-commit/issues"
  exit 0
fi

export GIT_BRANCH_NAME=`git name-rev --name-only HEAD`
if [ -z "$GIT_BRANCH_NAME" ]; then
  >&2 echo "fit-commit: WARNING: Skipping checks because the Git branch cannot be determined."
  >&2 echo "fit-commit: Please submit a bug report with the project:"
  >&2 echo "fit-commit: https://github.com/m1foley/fit-commit/issues"
  exit 0
fi

${cmd} -rrubygems -e '
  begin
    require "fit_commit"
    true
  rescue LoadError => e
    $stderr.puts <<-MESSAGE
fit-commit: WARNING: Skipping checks because: #{e}
fit-commit: Did you set your Ruby version?
MESSAGE
    false
  end and FitCommit.run
' < /dev/tty
