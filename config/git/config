[user]
	name = Jan Christoph Ebersbach
	email = jceb@e-jc.de
[gui]
	fontui = -family \"Bitstream Vera Sans\" -size 8 -weight bold -slant roman -underline 0 -overstrike 0
	fontdiff = -family \"Bitstream Vera Sans Mono\" -size 8 -weight normal -slant roman -underline 0 -overstrike 0
	editor = /usr/bin/gvim
[merge]
	tool = vimdiff
[color]
	diff = auto
	ui = auto
[alias]
	########## list all aliases
	aliases = "!git config -l | grep alias | cut -c 7-"
	configedit = "!${EDITOR} ~/.config/git/config"

	########## branches
	b = branch
	bc = branch --contains
	bm = branch --merged
	br = branch -r
	brc = branch -r --contains
	brm = branch -r --merged
	ba = branch -a
	bac = branch -a --contains
	bam = branch -a --merged
	ban = branch -a --no-merged

	co = checkout
	# checkout branch by taking the upstream branch and creating a local tracking copy
	coo = "!bash -c 'origin=\"${1#remotes/}\"; branch=\"${origin#*/}\"; git branch \"${branch}\" \"${origin}\"' -"
	cob = "!bash -c 'origin=\"${1#remotes/}\"; branch=\"${origin#*/}\"; git checkout -b \"${branch}\" \"${origin}\"' -"
	pre = pull --rebase --prune
	ff = merge --ff-only
	m = merge --no-ff

	########## Univention specific settings
	pb = "!b=\"$(git branch|sed -ne 's/^\\*\\s*//p')\"; git push --set-upstream origin \"${b}:${b}\""
	mm = "!m=\"$(dirname \"$(dirname \"$(git branch|sed -ne 's/^\\*\\s*//p')\")\")\"; git merge \"origin/${m}/master\""
	cm = "!m=\"$(dirname \"$(dirname \"$(git branch|sed -ne 's/^\\*\\s*//p')\")\")\"; git checkout \"${m}/master\""
	cb = "!r=\"$(dirname \"$(git branch|sed -ne 's/^\\*\\s*//p')\")\"; echo -n \"Enter ticket id: \"; read id; echo -n \"Enter description: \"; read d; git checkout -b \"${r}/${id}-$(echo \"${d}\"|sed -e 's/\\s\\+/_/g')/master\""

	########## commits
	c = commit
	ca = commit -a
	cam = commit --amend -a
	# cm = commit -m

	# take commit message from debian/changelog
	cmd = "!git commit -e -m \"$(cd \"${GIT_PREFIX}\" && dpkg-parsechangelog | sed -e '1,/ \\./d; s/\\s\\+//')\""

	# unstage changes
	unstage = reset HEAD --

	# undo last commit, soft and hard way
	# undo = reset --soft HEAD~
	# undohard = reset --hard HEAD~

	########## diff
	# word wise diff
	d = -p diff --color-words
	dc = -p diff --color-words --cached
	df = -p diff-index --color-words -p HEAD

	# some diff extensions
	diffr = -p diff --relative
	diffc = -p diff --cached
	diffcr = -p diff --cached --relative

	# diff changes regardless whether they are staged or unstaged
	difff = -p diff-index -p HEAD
	difffr = -p diff-index -p HEAD --relative
	diffstat = -p diff --stat -r

	# edit changed files
	edit = "!${EDITOR} `git ls-files -m`"

	# status abbreviations
	st = status -uno
	sta = status

	########## log

	# history of a file
	filelog = log -u

	# show history
	ls = log --pretty=format:"%C(auto)%h\\ %Cgreen%>(12)%ar%C(auto)%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --graph
	ll = log --pretty=format:"%C(auto)%h\\ %Cgreen%>(12)%ar%C(auto)%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --stat
	# show file names and commits only
	ln = log --name-only --pretty=oneline
	# show unique file names only
	lf = !bash -c 'git log --name-only --pretty=oneline  "${@}" | grep -vE "^[0-9a-f]{40} " | sort | uniq' -

	# show latest tag
	lasttag = describe --tags --abbrev=0

	# show latest commit
	tip = log HEAD -1 --stat --
	head = log HEAD -1 --stat --

	# show who contributed to the project
	who = shortlog -n -s --no-merges

	########## some plumbing aliases
	type = cat-file -t
	dump = cat-file -p

	########## some git svn commands
	up = svn rebase
	ci = svn dcommit
	unisvn = !gcu

	########## submodules
	subm = submodule foreach git checkout master
	subpre = submodule foreach git pull --rebase
	subup = submodule update --init --recursive

	########## rebase
	oldest-ancestor = !bash -c 'diff -u <(git rev-list --first-parent "${1:-master}") <(git rev-list --first-parent "${2:-HEAD}") | sed -ne \"s/^ //p\" | head -1' -
	rebase-onto     = !bash -c 'git rebase -i --onto $1 $(git oldest-ancestor $2 $3) $3' -

	# GUIs
	t = !tig --all
	g = !gitg --all 2>/dev/null &
	k = !gitk --all 2>/dev/null &
[push]
	default = upstream
[core]
	pager = less -FSRX
	editor = /usr/bin/nvim

# vi: ft=txt:tw=72:sw=4:ts=4:noet:cms=#%s
[init]
	templatedir = ~/.config/git/template
[rebase]
	autostash = true
